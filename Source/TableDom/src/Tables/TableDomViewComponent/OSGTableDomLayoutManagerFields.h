/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact:  David Kabala (djkabala@gmail.com)                             *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGTABLEDOMLAYOUTMANAGERFIELDS_H_
#define _OSGTABLEDOMLAYOUTMANAGERFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGContribTableDomDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class TableDomLayoutManager;

OSG_GEN_CONTAINERPTR(TableDomLayoutManager);

/*! \ingroup GrpContribTableDomFieldTraits
    \ingroup GrpLibOSGContribTableDom
 */
template <>
struct FieldTraits<TableDomLayoutManager *> :
    public FieldTraitsFCPtrBase<TableDomLayoutManager *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<TableDomLayoutManager *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBTABLEDOM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFTableDomLayoutManagerPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFTableDomLayoutManagerPtr"; }
};

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdTableDomLayoutManagerPtr"; 
}


/*! \ingroup GrpContribTableDomFieldTraits
 */
template <>
struct FieldTraits<TableDomLayoutManager *, 1> :
    public FieldTraitsFCPtrBase<TableDomLayoutManager *, 1>
{
  private:

  public:
    typedef FieldTraits<TableDomLayoutManager *, 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBTABLEDOM_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildTableDomLayoutManagerPtr"; 
}

template<> inline
const Char8 *FieldTraits<TableDomLayoutManager *, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildTableDomLayoutManagerPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpContribTableDomFieldSFields */
typedef PointerSField<TableDomLayoutManager *,
                      RecordedRefCountPolicy  > SFRecTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldSFields */
typedef PointerSField<TableDomLayoutManager *,
                      UnrecordedRefCountPolicy> SFUnrecTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldSFields */
typedef PointerSField<TableDomLayoutManager *,
                      WeakRefCountPolicy      > SFWeakTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldSFields */
typedef PointerSField<TableDomLayoutManager *,
                      NoRefCountPolicy        > SFUncountedTableDomLayoutManagerPtr;


/*! \ingroup GrpContribTableDomFieldMFields */
typedef PointerMField<TableDomLayoutManager *,
                      RecordedRefCountPolicy  > MFRecTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldMFields */
typedef PointerMField<TableDomLayoutManager *,
                      UnrecordedRefCountPolicy> MFUnrecTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldMFields */
typedef PointerMField<TableDomLayoutManager *,
                      WeakRefCountPolicy      > MFWeakTableDomLayoutManagerPtr;
/*! \ingroup GrpContribTableDomFieldMFields */
typedef PointerMField<TableDomLayoutManager *,
                      NoRefCountPolicy        > MFUncountedTableDomLayoutManagerPtr;



/*! \ingroup GrpContribTableDomFieldSFields */
typedef ChildPointerSField<
          TableDomLayoutManager *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildTableDomLayoutManagerPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpContribTableDomFieldSFields \ingroup GrpLibOSGContribTableDom */
struct SFRecTableDomLayoutManagerPtr : 
    public PointerSField<TableDomLayoutManager *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpContribTableDomFieldSFields \ingroup GrpLibOSGContribTableDom */
struct SFUnrecTableDomLayoutManagerPtr : 
    public PointerSField<TableDomLayoutManager *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribTableDomFieldSFields \ingroup GrpLibOSGContribTableDom */
struct SFWeakTableDomLayoutManagerPtr :
    public PointerSField<TableDomLayoutManager *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpContribTableDomFieldSFields \ingroup GrpLibOSGContribTableDom */
struct SFUncountedTableDomLayoutManagerPtr :
    public PointerSField<TableDomLayoutManager *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpContribTableDomFieldMFields \ingroup GrpLibOSGContribTableDom */
struct MFRecTableDomLayoutManagerPtr :
    public PointerMField<TableDomLayoutManager *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpContribTableDomFieldMFields \ingroup GrpLibOSGContribTableDom */
struct MFUnrecTableDomLayoutManagerPtr :
    public PointerMField<TableDomLayoutManager *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribTableDomFieldMFields \ingroup GrpLibOSGContribTableDom */
struct MFWeakTableDomLayoutManagerPtr :
    public PointerMField<TableDomLayoutManager *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpContribTableDomFieldMFields \ingroup GrpLibOSGContribTableDom */
struct MFUncountedTableDomLayoutManagerPtr :
    public PointerMField<TableDomLayoutManager *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpContribTableDomFieldSFields \ingroup GrpLibOSGContribTableDom */
struct SFUnrecChildTableDomLayoutManagerPtr :
    public ChildPointerSField<
        TableDomLayoutManager *, 
        UnrecordedRefCountPolicy,
        1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGTABLEDOMLAYOUTMANAGERFIELDS_H_ */
