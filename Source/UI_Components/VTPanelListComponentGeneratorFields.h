/*---------------------------------------------------------------------------*\
 *                             VizTool                                 		 *
 *                                                                           *
 *               Copyright (C) 2010-2011 by Achyuthan Vasanth                *
 *                                                                           *
 *   authors:  Achyuthan Vasanth (achvas88@gmail.com)                        *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU General Public License as published            *
 * by the Free Software Foundation, version 3.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU General Public                 *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _VTPANELLISTCOMPONENTGENERATORFIELDS_H_
#define _VTPANELLISTCOMPONENTGENERATORFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OpenSG/OSGConfig.h"
#include "VTVizToolDef.h"

#include "OpenSG/OSGFieldContainerFields.h"
#include "OpenSG/OSGPointerSField.h"
#include "OpenSG/OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class PanelListComponentGenerator;

OSG_GEN_CONTAINERPTR(PanelListComponentGenerator);

/*! \ingroup GrpVizToolFieldTraits
    \ingroup GrpLibOSGVizTool
 */
template <>
struct FieldTraits<PanelListComponentGenerator *> :
    public FieldTraitsFCPtrBase<PanelListComponentGenerator *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<PanelListComponentGenerator *>  Self;

    enum                        { Convertible = NotConvertible };

    static VT_VIZTOOL_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFPanelListComponentGeneratorPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFPanelListComponentGeneratorPtr"; }
};

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakPanelListComponentGeneratorPtr"; 
}

template<> inline
const Char8 *FieldTraits<PanelListComponentGenerator *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdPanelListComponentGeneratorPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpVizToolFieldSFields */
typedef PointerSField<PanelListComponentGenerator *,
                      RecordedRefCountPolicy  > SFRecPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldSFields */
typedef PointerSField<PanelListComponentGenerator *,
                      UnrecordedRefCountPolicy> SFUnrecPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldSFields */
typedef PointerSField<PanelListComponentGenerator *,
                      WeakRefCountPolicy      > SFWeakPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldSFields */
typedef PointerSField<PanelListComponentGenerator *,
                      NoRefCountPolicy        > SFUncountedPanelListComponentGeneratorPtr;


/*! \ingroup GrpVizToolFieldMFields */
typedef PointerMField<PanelListComponentGenerator *,
                      RecordedRefCountPolicy  > MFRecPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldMFields */
typedef PointerMField<PanelListComponentGenerator *,
                      UnrecordedRefCountPolicy> MFUnrecPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldMFields */
typedef PointerMField<PanelListComponentGenerator *,
                      WeakRefCountPolicy      > MFWeakPanelListComponentGeneratorPtr;
/*! \ingroup GrpVizToolFieldMFields */
typedef PointerMField<PanelListComponentGenerator *,
                      NoRefCountPolicy        > MFUncountedPanelListComponentGeneratorPtr;




#else // these are the doxygen hacks

/*! \ingroup GrpVizToolFieldSFields \ingroup GrpLibOSGVizTool */
struct SFRecPanelListComponentGeneratorPtr : 
    public PointerSField<PanelListComponentGenerator *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpVizToolFieldSFields \ingroup GrpLibOSGVizTool */
struct SFUnrecPanelListComponentGeneratorPtr : 
    public PointerSField<PanelListComponentGenerator *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpVizToolFieldSFields \ingroup GrpLibOSGVizTool */
struct SFWeakPanelListComponentGeneratorPtr :
    public PointerSField<PanelListComponentGenerator *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpVizToolFieldSFields \ingroup GrpLibOSGVizTool */
struct SFUncountedPanelListComponentGeneratorPtr :
    public PointerSField<PanelListComponentGenerator *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpVizToolFieldMFields \ingroup GrpLibOSGVizTool */
struct MFRecPanelListComponentGeneratorPtr :
    public PointerMField<PanelListComponentGenerator *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpVizToolFieldMFields \ingroup GrpLibOSGVizTool */
struct MFUnrecPanelListComponentGeneratorPtr :
    public PointerMField<PanelListComponentGenerator *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpVizToolFieldMFields \ingroup GrpLibOSGVizTool */
struct MFWeakPanelListComponentGeneratorPtr :
    public PointerMField<PanelListComponentGenerator *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpVizToolFieldMFields \ingroup GrpLibOSGVizTool */
struct MFUncountedPanelListComponentGeneratorPtr :
    public PointerMField<PanelListComponentGenerator *,
                         NoRefCountPolicy        > {};



#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _VTPANELLISTCOMPONENTGENERATORFIELDS_H_ */
